- name: Define a Import, if error update AnsibleImport status then end play
  block:
    - name: Register contents of import directory
      shell: "ls /opt/import | tail -n 1"
      register: import_contents

    - name: Get import file extension
      shell: echo  {{ import_contents.stdout }} | sed -n 's/.*\.\(.*\)/\1/p'
      register: import_file_extension


    - name: Launch Import
      awx.awx.import:
        assets: '{{ lookup("file", "/opt/import/{{ import_contents.stdout }}") | from_yaml() }}'
      register: Import
      when: import_file_extension.stdout == "yaml"

    - name: Launch Import
      awx.awx.import:
        assets: '{{ lookup("file", "/opt/import/{{ import_contents.stdout }}") | from_json() }}'
      register: Import
      when: import_file_extension.stdout == "json"

  rescue:
    - name: Update status if creation resulted in an error
      operator_sdk.util.k8s_status:
        api_version: tower.ansible.com/v1alpha1
        kind: AnsibleImport
        name: "{{ lookup('env', 'ANSIBLEIMPORT_NAME') }}"
        namespace: "{{ lookup('env', 'ANSIBLEIMPORT_NAMESPACE') }}"
        status:
          isFinished: true

    - name: End playbook run
      meta: end_play

- name: Update AnsibleImport status
  operator_sdk.util.k8s_status:
    api_version: tower.ansible.com/v1alpha1
    kind: AnsibleImport
    name: "{{ lookup('env', 'ANSIBLEIMPORT_NAME') }}"
    namespace: "{{ lookup('env', 'ANSIBLEIMPORT_NAMESPACE') }}"
    status:
      isFinished: true
      AnsibleImportResult:
        changed: "{{ Import.changed }}"

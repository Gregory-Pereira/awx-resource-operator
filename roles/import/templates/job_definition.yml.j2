---
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ ansible_operator_meta.name }}"
  namespace: "{{ ansible_operator_meta.namespace }}"
spec:
  ttlSecondsAfterFinished: {{ job_ttl }}
  template:
    spec:
      serviceAccountName: resource-operator-controller-manager-job
      containers:
        - name: "{{ ansible_operator_meta.name }}"
          image: "{{ _runner_image }}"
          imagePullPolicy: "{{ _runner_pull_policy }}"
          volumeMounts:
            - name: importfile
              mountPath: /opt/import
          env:
            - name: KUBERNETES_RESOURCE_NAME
              value: " {{ kubernetes_resource_name }}"
            - name: IMPORT_TYPE
              value: "{{ import_type }}"
            - name: IMPORT_NAME
              value: "{{ import_name }}"
            - name: IMPORT_FORMAT
              value: "{{ import_format }}"
            - name: TOWER_OAUTH_TOKEN
              valueFrom:
                secretKeyRef:
                  name: "{{ tower_auth_secret }}"
                  key: token
            - name: TOWER_HOST
              valueFrom:
                secretKeyRef:
                  name: "{{ tower_auth_secret }}"
                  key: host
            - name: TOWER_VERIFY_SSL
              value: "False"
            - name: ANSIBLEIMPORT_NAME
              value: "{{ ansible_operator_meta.name }}"
            - name: ANSIBLEIMPORT_NAMESPACE
              value: "{{ ansible_operator_meta.namespace }}"
      volumes:
        - name: importfile
{% if IMPORT_TYPE is defined and IMPORT_TYPE == "configmap" %}
          configMap:
            name: {{ kubernetes_resource_name }}
{% else %}
          secret:
            secretName: {{ kubernetes_resource_name }}
{% endif %}
      restartPolicy: Never
  backoffLimit: {{ backoff_limit }}
